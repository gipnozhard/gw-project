package telegram

import (
	"fmt"
	"log"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// Handler –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Telegram-–±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ö–æ–¥—è—â–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
// –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å —Å–µ—Ä–≤–∏—Å–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç.
type Handler struct {
	bot             *tgbotapi.BotAPI // –ö–ª–∏–µ–Ω—Ç Telegram Bot API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
	exchangeService *ExchangeService // –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç
}

// NewHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Handler —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.
// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
//   - bot: –∫–ª–∏–µ–Ω—Ç Telegram Bot API
//   - exchangeService: —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç
//
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
//   - –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π Handler
func NewHandler(bot *tgbotapi.BotAPI, exchangeService *ExchangeService) *Handler {
	return &Handler{
		bot:             bot,
		exchangeService: exchangeService,
	}
}

// HandleCommand –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â—É—é –∫–æ–º–∞–Ω–¥—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ç–≤–µ—Ç.
// –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–º–∞–Ω–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "/start" –∏–ª–∏ "/rates"), —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
//   - msg: –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func (h *Handler) HandleCommand(msg *tgbotapi.Message) {
	// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç
	response := tgbotapi.NewMessage(msg.Chat.ID, "")

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
	switch msg.Command() {
	case "start":
		// –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
		response.Text = "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /rates —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã."

	case "rates":
		// –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /rates: –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
		rates, err := h.exchangeService.GetAllRates()
		if err != nil {
			response.Text = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
			break
		}

		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç
		var sb strings.Builder
		sb.WriteString("–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –≤ —Ä—É–±–ª—è—Ö:\n\n")

		// –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –≤–∞–ª—é—Ç—É –∏ –µ–µ –∫—É—Ä—Å –≤ –æ—Ç–≤–µ—Ç
		for currency, rate := range rates {
			flag := GetCurrencyFlag(currency) // –ü–æ–ª—É—á–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, üá∫üá∏ –¥–ª—è USD)
			sb.WriteString(fmt.Sprintf("%s %s: %.4f\n", flag, currency, rate))
		}

		response.Text = sb.String()

	default:
		// –û—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É
		response.Text = "–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /rates"
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	if _, err := h.bot.Send(response); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err) // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å
	}
}
